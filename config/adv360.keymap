/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        main_email: main_email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp T &kp T &kp E &kp J &kp A &kp S &kp G &kp A &kp R &kp R &kp E &kp P &kp A &kp L &kp L &kp Y &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "MAIN_EMAIL";
            wait-ms = <0>;
        };

        school_email: school_email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp E &kp N0 &kp N9 &kp N5 &kp N7 &kp N3 &kp N6 &kp N6 &kp AT &kp U &kp DOT &kp N &kp U &kp S &kp DOT &kp E &kp D &kp U>;
            label = "SCHOOL_EMAIL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL        &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &tog 1                                                                                 &mo 3      &kp N6  &kp N7        &kp N8          &kp N9    &kp N0    &kp MINUS
&kp TAB          &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                                                  &none      &kp Y   &kp U         &kp I           &kp O     &kp P     &kp BSLH
&mt CAPS ESCAPE  &kp A      &kp S     &kp D     &kp F      &kp G   &kp TAB   &mt LG(X) LG(C)  &kp LG(V)             &kp RIGHT_CONTROL  &kp RIGHT_COMMAND  &none      &kp H   &kp J         &kp K           &kp L     &kp SEMI  &kp SQT
&kp LSHFT        &kp Z      &kp X     &kp C     &kp V      &kp B                              &kp LEFT_CONTROL      &kp RALT                                         &kp N   &kp M         &kp COMMA       &kp DOT   &kp FSLH  &sk LSHFT
&mo 2            &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &mo 4            &kp LEFT_COMMAND      &kp A              &kp ENTER          &kp SPACE          &kp UP_ARROW  &kp DOWN_ARROW  &kp LBKT  &kp RBKT  &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_MOD {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                                                            &trans                  &none   &none       &none       &none  &none  &none
&none       &main_email   &school_email  &none         &none         &none         &bootloader                                                                                      &bootloader             &trans  &none       &none       &none  &none  &none
&none       &none         &none          &none         &none         &none         &none        &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_DEC      &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &rgb_ug RGB_MEFS_CMD 5  &none   &none       &none       &none  &none  &none
&none       &none         &none          &none         &none         &none                                            &none                     &kp K_MUTE                                                  &none   &none       &none       &none  &none  &none
&none       &none         &none          &none         &none                       &none        &none                 &none                     &none            &bl BL_TOG         &rgb_ug RGB_TOG                 &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_Hyper {
            bindings = <
&trans  &trans     &trans     &trans     &trans    &trans     &trans                                      &trans  &trans  &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans     &trans     &trans     &trans    &trans     &trans                                      &trans  &trans  &trans  &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&trans  &kp TILDE  &kp GRAVE  &kp MINUS  &kp PLUS  &kp EQUAL  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
&trans  &trans     &trans     &trans     &trans    &trans                     &trans      &trans                  &trans  &trans  &trans  &trans                &trans                 &trans
&trans  &trans     &trans     &trans     &trans               &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans                &trans                 &trans
            >;
        };
    };
};
